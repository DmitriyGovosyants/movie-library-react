{"version":3,"file":"static/js/home-page.4de81cea.chunk.js","mappings":"+QAyGA,EA5Fa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAkCN,EAAAA,EAAAA,UAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAAoCR,EAAAA,EAAAA,WAAS,GAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KACA,GAA0BV,EAAAA,EAAAA,UAAS,MAAnC,eAAOW,EAAP,KAAcC,EAAd,KAEMC,ECnBmB,SAAAC,GACzB,IAAMC,GAAMC,EAAAA,EAAAA,UAIZ,OAHAC,EAAAA,EAAAA,YAAU,WACRF,EAAIG,QAAUJ,IACb,CAACA,IACGC,EAAIG,QDcOC,CAAYlB,IAE9BgB,EAAAA,EAAAA,YAAU,WACR,GAAe,KAAXhB,EAAJ,CAIA,IAAMmB,EAAK,mCAAG,iGACZV,GAAc,GACdW,IAFY,mBAOAC,EAAAA,EAAAA,IAAcjB,GAPd,oBAMRkB,KAAQC,EANA,EAMAA,QAASC,EANT,EAMSA,YAEnBjB,EAAaiB,GACbrB,GAAS,OAAIoB,IATH,kDAWVZ,EAAS,KAAEc,SAXD,yBAaVhB,GAAc,GAbJ,6EAAH,qDAgBXU,OACC,CAACf,EAAMJ,KAEVgB,EAAAA,EAAAA,YAAU,WACR,GAAe,KAAXhB,EAAJ,CAGA,GAAIA,IAAWY,EAGb,OAFAT,EAAS,SACTE,EAAQ,GAIV,IAAMc,EAAK,mCAAG,iGACZV,GAAc,GACdW,IAFY,mBAOAM,EAAAA,EAAAA,IAAkBtB,EAAMJ,GAPxB,oBAMRsB,KAAQC,EANA,EAMAA,QAASC,EANT,EAMSA,YAGnBjB,EAAaiB,GACbrB,GAAS,OAAIoB,IAVH,kDAYVZ,EAAS,KAAEc,SAZD,yBAcVhB,GAAc,GAdJ,6EAAH,qDAiBXU,OACC,CAACf,EAAMJ,EAAQY,IAElB,IAAMQ,EAAc,WAClBO,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,aAId,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CACE7B,UAAWA,EACXD,OAAQA,EACRI,KAAMA,EACNE,UAAWA,EACXD,QAASA,IAEVK,IAAS,SAAC,KAAD,UAAeA,IACxBF,IAAc,SAAC,KAAD,IACG,IAAjBN,EAAM6B,SAAgB,SAAC,KAAD,CAAa7B,MAAOA,IAC1CA,EAAM6B,OAAS,IACd,SAAC,KAAD,CAAY1B,QAASA,EAASD,KAAMA,EAAME,UAAWA","sources":["pages/Home.jsx","hooks/usePrevious.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { usePrevious } from 'hooks/usePrevious';\nimport { fetchTrending, fetchMoviesByName } from 'services/filmsApi';\nimport {\n  Section,\n  Container,\n  SearchStatusBar,\n  ErrorMessage,\n  GalleryList,\n  Pagination,\n  Spinner,\n} from 'components';\n\nconst Home = () => {\n  const [search, setSearch] = useState('');\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n  const [showLoader, setShowLoader] = useState(false);\n  const [error, setError] = useState(null);\n\n  const prevQuery = usePrevious(search);\n\n  useEffect(() => {\n    if (search !== '') {\n      return;\n    }\n\n    const fetch = async () => {\n      setShowLoader(true);\n      scrollToTop();\n\n      try {\n        const {\n          data: { results, total_pages },\n        } = await fetchTrending(page);\n        setTotalPage(total_pages);\n        setFilms([...results]);\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setShowLoader(false);\n      }\n    };\n    fetch();\n  }, [page, search]);\n\n  useEffect(() => {\n    if (search === '') {\n      return;\n    }\n    if (search !== prevQuery) {\n      setFilms([]);\n      setPage(1);\n      return;\n    }\n\n    const fetch = async () => {\n      setShowLoader(true);\n      scrollToTop();\n\n      try {\n        const {\n          data: { results, total_pages },\n        } = await fetchMoviesByName(page, search);\n\n        setTotalPage(total_pages);\n        setFilms([...results]);\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setShowLoader(false);\n      }\n    };\n    fetch();\n  }, [page, search, prevQuery]);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'instant',\n    });\n  };\n\n  return (\n    <Section>\n      <Container>\n        <SearchStatusBar\n          setSearch={setSearch}\n          search={search}\n          page={page}\n          totalPage={totalPage}\n          setPage={setPage}\n        />\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        {showLoader && <Spinner />}\n        {films.length !== 0 && <GalleryList films={films} />}\n        {films.length > 0 && (\n          <Pagination setPage={setPage} page={page} totalPage={totalPage} />\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Home;\n","import { useEffect, useRef } from \"react\";\n\nexport const usePrevious = value => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};"],"names":["useState","search","setSearch","films","setFilms","page","setPage","totalPage","setTotalPage","showLoader","setShowLoader","error","setError","prevQuery","value","ref","useRef","useEffect","current","usePrevious","fetch","scrollToTop","fetchTrending","data","results","total_pages","message","fetchMoviesByName","window","scrollTo","top","behavior","length"],"sourceRoot":""}