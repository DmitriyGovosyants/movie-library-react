{"version":3,"file":"static/js/home-page.17ec1a20.chunk.js","mappings":"4PAAeA,EAAc,WACzBC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,a,kBCgGhB,EArFa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAkCN,EAAAA,EAAAA,UAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAAoCR,EAAAA,EAAAA,WAAS,GAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KACA,GAA0BV,EAAAA,EAAAA,UAAS,MAAnC,eAAOW,EAAP,KAAcC,EAAd,KAEMC,ECpBmB,SAAAC,GACzB,IAAMC,GAAMC,EAAAA,EAAAA,UAIZ,OAHAC,EAAAA,EAAAA,YAAU,WACRF,EAAIG,QAAUJ,IACb,CAACA,IACGC,EAAIG,QDeOC,CAAYlB,GAwD9B,OAtDAgB,EAAAA,EAAAA,YAAU,WACR,GAAe,KAAXhB,EAAJ,CAIA,IAAMmB,EAAK,mCAAG,iGACZV,GAAc,GACdf,IAFY,mBAOA0B,EAAAA,EAAAA,IAAmBhB,GAPnB,oBAMRiB,KAAQC,EANA,EAMAA,QAASC,EANT,EAMSA,YAEnBhB,EAAagB,GACbpB,GAAU,OAAImB,IATJ,kDAWVX,EAAS,KAAEa,SAXD,yBAaVf,GAAc,GAbJ,6EAAH,qDAgBXU,OACC,CAACf,EAAMJ,KAEVgB,EAAAA,EAAAA,YAAU,WACR,GAAe,KAAXhB,EAAJ,CAGA,GAAIA,IAAWY,EAGb,OAFAT,EAAU,SACVE,EAAQ,GAIV,IAAMc,EAAK,mCAAG,iGACZV,GAAc,GACdf,IAFY,mBAOA+B,EAAAA,EAAAA,IAAkBrB,EAAMJ,GAPxB,oBAMRqB,KAAQC,EANA,EAMAA,QAASC,EANT,EAMSA,YAGnBhB,EAAagB,GACbpB,GAAU,OAAImB,IAVJ,kDAYVX,EAAS,KAAEa,SAZD,yBAcVf,GAAc,GAdJ,6EAAH,qDAiBXU,OACC,CAACf,EAAMJ,EAAQY,KAGhB,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEX,UAAWA,EACXD,OAAQA,EACRI,KAAMA,EACNE,UAAWA,EACXD,QAASA,IAEVK,IAAS,SAAC,KAAD,UAAeA,IACxBF,IAAc,SAAC,KAAD,IACI,IAAlBN,EAAOwB,SAAgB,SAAC,KAAD,CAAWxB,OAAQA,IAC1CA,EAAOwB,OAAS,IACf,SAAC,KAAD,CAAYrB,QAASA,EAASD,KAAMA,EAAME,UAAWA","sources":["helpers/srcollToTop.js","pages/Home.jsx","hooks/usePrevious.js"],"sourcesContent":["  export const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'instant',\n    });\n  };","import { useState, useEffect } from 'react';\nimport { usePrevious } from 'hooks/usePrevious';\nimport { fetchMoviesOnTrend, fetchMoviesByName } from 'services/movieApi';\nimport { scrollToTop } from 'helpers/srcollToTop';\nimport {\n  Section,\n  Container,\n  SearchStatusBar,\n  ErrorMessage,\n  MovieList,\n  Pagination,\n  Spinner,\n} from 'components';\n\nconst Home = () => {\n  const [search, setSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n  const [showLoader, setShowLoader] = useState(false);\n  const [error, setError] = useState(null);\n\n  const prevQuery = usePrevious(search);\n\n  useEffect(() => {\n    if (search !== '') {\n      return;\n    }\n\n    const fetch = async () => {\n      setShowLoader(true);\n      scrollToTop();\n\n      try {\n        const {\n          data: { results, total_pages },\n        } = await fetchMoviesOnTrend(page);\n        setTotalPage(total_pages);\n        setMovies([...results]);\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setShowLoader(false);\n      }\n    };\n    fetch();\n  }, [page, search]);\n\n  useEffect(() => {\n    if (search === '') {\n      return;\n    }\n    if (search !== prevQuery) {\n      setMovies([]);\n      setPage(1);\n      return;\n    }\n\n    const fetch = async () => {\n      setShowLoader(true);\n      scrollToTop();\n\n      try {\n        const {\n          data: { results, total_pages },\n        } = await fetchMoviesByName(page, search);\n\n        setTotalPage(total_pages);\n        setMovies([...results]);\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setShowLoader(false);\n      }\n    };\n    fetch();\n  }, [page, search, prevQuery]);\n\n  return (\n    <Section>\n      <Container>\n        <SearchStatusBar\n          setSearch={setSearch}\n          search={search}\n          page={page}\n          totalPage={totalPage}\n          setPage={setPage}\n        />\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        {showLoader && <Spinner />}\n        {movies.length !== 0 && <MovieList movies={movies} />}\n        {movies.length > 0 && (\n          <Pagination setPage={setPage} page={page} totalPage={totalPage} />\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Home;\n","import { useEffect, useRef } from \"react\";\n\nexport const usePrevious = value => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};"],"names":["scrollToTop","window","scrollTo","top","behavior","useState","search","setSearch","movies","setMovies","page","setPage","totalPage","setTotalPage","showLoader","setShowLoader","error","setError","prevQuery","value","ref","useRef","useEffect","current","usePrevious","fetch","fetchMoviesOnTrend","data","results","total_pages","message","fetchMoviesByName","length"],"sourceRoot":""}