{"version":3,"file":"static/js/library-page.99f7820f.chunk.js","mappings":"kSAOaA,EAAU,WACrB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACQC,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAiB,mCAAG,WAAMC,GAAN,qGAECC,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,IAAIC,EAAAA,IAAL,wBAAoBV,QAApB,IAAoBA,OAApB,EAAoBA,EAAMW,IAA1B,aAFV,OAEhBC,EAFgB,OAGhBC,EAAYC,OAAOC,OAAOH,EAASI,OACnCpB,EAAiBiB,EAAUI,QAAO,SAAAC,GAAK,OAAsB,IAAlBA,EAAMZ,MACvDT,EAAkBD,GAClBG,EAAiBO,GANK,kDAQtBa,EAAAA,GAAAA,KAAA,gCAAoCb,IARd,0DAAH,sDAYvB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEc,QAAS,WACPf,EAAkB,WAClBD,EAAgB,CAAEiB,KAAM,aAH5B,sBAQA,SAAC,KAAD,CACED,QAAS,WACPf,EAAkB,SAClBD,EAAgB,CAAEiB,KAAM,WAH5B,mBAQCvB,EAC2B,KAAb,OAAdF,QAAc,IAAdA,OAAA,EAAAA,EAAgB0B,UACf,SAAC,KAAD,CACEC,OAAQ3B,EACRS,kBAAmBA,EACnBF,aAAcA,UAQ1B","sources":["pages/Library.jsx"],"sourcesContent":["import { Section, Container, Button, useUser, MovieList } from 'components';\nimport { db } from 'services/firebase/frebaseConfig';\nimport { toast } from 'react-toastify';\nimport { child, get, ref } from 'firebase/database';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const Library = () => {\n  const [moviesByStatus, setMoviesByStatus] = useState([]);\n  const [currentStatus, setCurrentStatus] = useState('');\n  const { user } = useUser();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const getMoviesByStatus = async status => {\n    try {\n      const snapshot = await get(child(ref(db), `/users/${user?.uid}/movies`));\n      const allMovies = Object.values(snapshot.val());\n      const moviesByStatus = allMovies.filter(movie => movie[status] === true);\n      setMoviesByStatus(moviesByStatus);\n      setCurrentStatus(status);\n    } catch (error) {\n      toast.info(`You have no movies in ${status}`);\n    }\n  };\n\n  return (\n    <Section>\n      <Container>\n        <Button\n          onClick={() => {\n            getMoviesByStatus('watched');\n            setSearchParams({ view: 'watched' });\n          }}\n        >\n          Watched\n        </Button>\n        <Button\n          onClick={() => {\n            getMoviesByStatus('queue');\n            setSearchParams({ view: 'queue' });\n          }}\n        >\n          Queue\n        </Button>\n        {currentStatus}\n        {moviesByStatus?.length !== 0 && (\n          <MovieList\n            movies={moviesByStatus}\n            getMoviesByStatus={getMoviesByStatus}\n            searchParams={searchParams}\n          />\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Library;\n"],"names":["Library","useState","moviesByStatus","setMoviesByStatus","currentStatus","setCurrentStatus","user","useUser","useSearchParams","searchParams","setSearchParams","getMoviesByStatus","status","get","child","ref","db","uid","snapshot","allMovies","Object","values","val","filter","movie","toast","onClick","view","length","movies"],"sourceRoot":""}